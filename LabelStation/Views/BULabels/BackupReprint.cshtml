@model LabelStation.Models.BULabel

@{
    ViewData["Title"] = "Reprint " + Model.ItemNumber;
    Layout = "~/Views/Shared/_Layout_Hudson.cshtml";
}

<h1 class="mt-5">Re-Print Backup Label for @Model.ItemNumber</h1>

<h4>@Model.ItemDescription</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="BackupReprint">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ID" />
            <div class="form-group">
                <label asp-for="ItemNumber" class="control-label"></label>
                <input asp-for="ItemNumber" class="form-control" readonly/>
                <span asp-validation-for="ItemNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ItemDescription" class="control-label"></label>
                <input asp-for="ItemDescription" class="form-control" readonly/>
                <span asp-validation-for="ItemDescription" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Print" class="form-label">Set By Default</label>
                <input asp-for="Print" value="No" class="form-control" readonly/>
                <span asp-validation-for="Print" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Standard" class="control-label"></label>
                <input asp-for="Standard" class="form-control" readonly/>
                <span asp-validation-for="Standard" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label">Set By Default</label>
                <input asp-for="Quantity" class="form-control" value="1" readonly />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LPNumber" class="control-label text-danger">Enter LP Numbers ONLY - Selected Prefix will be added</label>
                <input onkeypress="return isNumberKey(event)" type="text" asp-for="LPNumber" class="form-control" maxlength="7" />
                <span asp-validation-for="LPNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="IsReprint" class="form-label">This is Auto Set on Reprint</label>
                <input asp-for="IsReprint" value="Yes" class="form-control" readonly />
                <span asp-validation-for="IsReprint" class="text-danger"></span>
            </div>            
            <div class="form-group">
                <label asp-for="Prefix" class="control-label">Select Prefix - HC or GM</label>
                <select asp-for="Prefix" class="form-control" required>
                    <option value="">Prefixes Select One</option>
                    <option value="HC">Hudson - HC</option>
                    <option value="GM">GRIMM - GM</option>
                    </select>
                <span asp-validation-for="Prefix" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PrinterName" class="form-label">Set By Default</label>
                <input asp-for="PrinterName" value="Bartender_RCV" class="form-control" readonly />
                <span asp-validation-for="PrinterName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Re-Print Label" class="btn btn-danger mt-2" />
            </div>
        </form>
    </div>
</div>

<div>
    <a class="btn btn-secondary mt-2" asp-action="Index">Back to List</a>
</div>

<script language="Javascript">
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }            
        return true;
    }
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
